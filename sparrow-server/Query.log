
DROP DATABASE chimera_integration;
CREATE DATABASE chimera_integration;

use chimera_integration;

CREATE TABLE `PARENT_DATA` (
  `calendarId` int(11) DEFAULT NULL,
  `transactionDate` varchar(25) DEFAULT NULL,
  `actualDisbursementDate` varchar(25) DEFAULT NULL,
  `processid` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `CLIENT_DATA` (
  `clientid` int(11) DEFAULT NULL,
  `attendanceid` int(11) DEFAULT NULL,
  `loanid` int(11) DEFAULT NULL,
  `amount` int(11) DEFAULT NULL,
  `processid` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `spoors_header_data` (
    `key_` VARCHAR(50) NULL DEFAULT NULL,
    `value` VARCHAR(50) NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

INSERT INTO `spoors_header_data` (`Key_`, `Value`) VALUES ('host', 'nd.spoors.in');
INSERT INTO `spoors_header_data` (`Key_`, `Value`) VALUES ('Accept', 'application/json, text/plain, */*');


CREATE TABLE `header_data` (
    `key_` VARCHAR(50) NULL DEFAULT NULL,
    `value` VARCHAR(50) NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

INSERT INTO `header_data` (`key_`, `value`) VALUES ('host', 'lab.lasalle.in');

INSERT INTO `header_data` (`key_`, `value`) VALUES ('Accept', 'application/json, text/plain, */*');

INSERT INTO `header_data` (`key_`, `value`) VALUES ('Fineract-Platform-TenantId', 'default');

CREATE TABLE `CLIENT_FPS_DATA_OVERALL` (
  `clientid` int(11) DEFAULT NULL,
  `clientSignature` varchar(100) DEFAULT NULL,
  `processid` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `OVERALL_DENOMINATION` (
	`branch` VARCHAR(25) NULL DEFAULT NULL,
	`groupid` VARCHAR(25) NULL DEFAULT NULL,
	`groupname` VARCHAR(25) NULL DEFAULT NULL,
	`collectiondate` VARCHAR(25) NULL DEFAULT NULL,
	`disbursementdate` VARCHAR(25) NULL DEFAULT NULL,
	`calendarid` VARCHAR(25) NULL DEFAULT NULL,
	`2000_Note` VARCHAR(25) NULL DEFAULT NULL,
	`500_Note` VARCHAR(25) NULL DEFAULT NULL,
	`200_Note` VARCHAR(25) NULL DEFAULT NULL,
	`100_Note` VARCHAR(25) NULL DEFAULT NULL,
	`50_Note` VARCHAR(25) NULL DEFAULT NULL,
	`20_Note` VARCHAR(25) NULL DEFAULT NULL,
	`10_Note` VARCHAR(25) NULL DEFAULT NULL,
	`5_Note` VARCHAR(25) NULL DEFAULT NULL,
	`10_Coin` VARCHAR(25) NULL DEFAULT NULL,
	`5_Coin` VARCHAR(25) NULL DEFAULT NULL,
	`2_Coin` VARCHAR(25) NULL DEFAULT NULL,
	`1_Coin` VARCHAR(25) NULL DEFAULT NULL,
	`Total_Collected_Notes` VARCHAR(25) NULL DEFAULT NULL,
	`Amount_collected_in_Notes` VARCHAR(25) NULL DEFAULT NULL,
	`Total_coins_collected` VARCHAR(25) NULL DEFAULT NULL,
	`Amount_collected_in_Coins` VARCHAR(25) NULL DEFAULT NULL,
	`Total_Amount_Collected` VARCHAR(25) NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;


DROP TABLE IF OVERALL_INBOUND_JLGCOLLECTION;
CREATE TABLE OVERALL_INBOUND_JLGCOLLECTION (
groupid varchar(100),
clientid varchar(100),
clientName varchar(250),
attendanceid varchar(100),
instanceid varchar(100),
loanid varchar(100),
amount varchar(100),
calendarid varchar(100), 
transactionDate varchar(100),
actualDisbursementDate varchar(100),
location varchar(250),
meetingTime varchar(250)
) COLLATE='utf8_general_ci' ENGINE=InnoDB;


CREATE DATABASE audit;



use audit;



CREATE TABLE `command_audit` (
	`command_id` INT(11) NOT NULL AUTO_INCREMENT,

	`instance_id` INT(11) NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,

	`end` DATETIME NULL DEFAULT NULL,
	`action_name` VARCHAR(150) NULL DEFAULT NULL,

	`process_name` VARCHAR(150) NULL DEFAULT NULL,
	`command_config` TEXT NULL DEFAULT NULL,

	`status` SMALLINT(6) NULL DEFAULT NULL,
	PRIMARY KEY (`command_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;



CREATE TABLE `instance_audit` (
	`instance_id` INT(11) NOT NULL AUTO_INCREMENT,
	`instance_name` VARCHAR(150) NOT NULL DEFAULT '0',

	`mode` VARCHAR(100) NOT NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
	`end` DATETIME NULL DEFAULT NULL,

	`hostname` VARCHAR(50) NULL DEFAULT NULL,
	`file` VARCHAR(500) NULL DEFAULT NULL,
	`status` SMALLINT(6) NULL DEFAULT NULL,

	`context_log` TEXT NULL DEFAULT NULL,
	`root_ref_id` INT(11) NULL DEFAULT NULL,

	PRIMARY KEY (`instance_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB

;



CREATE TABLE `statement_audit` (
	`statement_id` INT(11) NOT NULL AUTO_INCREMENT,
	`action_id` INT(11) NULL DEFAULT '0',

	`action_name` VARCHAR(50) NULL DEFAULT '0',
	`process_name` VARCHAR(50) NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,

	`end` DATETIME NULL DEFAULT NULL,
	`rows_written` INT(11) NULL DEFAULT NULL,
	`statement_config` TEXT NULL DEFAULT NULL,

	`rows_read` INT(11) NULL DEFAULT NULL,
	`status` SMALLINT(6) NULL DEFAULT NULL,
	
	PRIMARY KEY (`statement_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

CREATE DATABASE spw_audit;



use spw_audit;



CREATE TABLE `command_audit` (
	`command_id` INT(11) NOT NULL AUTO_INCREMENT,

	`instance_id` INT(11) NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,

	`end` DATETIME NULL DEFAULT NULL,
	`action_name` VARCHAR(150) NULL DEFAULT NULL,

	`process_name` VARCHAR(150) NULL DEFAULT NULL,
	`command_config` TEXT NULL DEFAULT NULL,

	`status` SMALLINT(6) NULL DEFAULT NULL,
	PRIMARY KEY (`command_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;



CREATE TABLE `instance_audit` (
	`instance_id` INT(11) NOT NULL AUTO_INCREMENT,
	`instance_name` VARCHAR(150) NOT NULL DEFAULT '0',

	`mode` VARCHAR(100) NOT NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
	`end` DATETIME NULL DEFAULT NULL,

	`hostname` VARCHAR(50) NULL DEFAULT NULL,
	`file` VARCHAR(500) NULL DEFAULT NULL,
	`status` SMALLINT(6) NULL DEFAULT NULL,

	`context_log` TEXT NULL DEFAULT NULL,
	`root_ref_id` INT(11) NULL DEFAULT NULL,

	PRIMARY KEY (`instance_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB

;



CREATE TABLE `statement_audit` (
	`statement_id` INT(11) NOT NULL AUTO_INCREMENT,
	`action_id` INT(11) NULL DEFAULT '0',

	`action_name` VARCHAR(50) NULL DEFAULT '0',
	`process_name` VARCHAR(50) NULL DEFAULT '0',
	`start` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,

	`end` DATETIME NULL DEFAULT NULL,
	`rows_written` INT(11) NULL DEFAULT NULL,
	`statement_config` TEXT NULL DEFAULT NULL,

	`rows_read` INT(11) NULL DEFAULT NULL,
	`status` SMALLINT(6) NULL DEFAULT NULL,
	
	PRIMARY KEY (`statement_id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;


CREATE DATABASE spw_config;

use spw_config;


CREATE TABLE `spw_common_config` (
	`variable` VARCHAR(150) NULL DEFAULT NULL,
	`value` VARCHAR(500) NULL DEFAULT NULL,
	`active` ENUM('Y','N') NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;

CREATE TABLE `spw_instance_config` (
	`instance` VARCHAR(150) NULL DEFAULT NULL,
	`process` VARCHAR(150) NULL DEFAULT NULL,
	`variable` VARCHAR(150) NULL DEFAULT NULL,
	`value` VARCHAR(500) NULL DEFAULT NULL,
	`active` ENUM('Y','N') NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;


CREATE TABLE `spw_process_config` (
	`process` VARCHAR(150) NULL DEFAULT NULL,
	`variable` VARCHAR(150) NULL DEFAULT NULL,
	`value` VARCHAR(500) NULL DEFAULT NULL,
	`active` ENUM('Y','N') NULL DEFAULT NULL
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
;


CREATE TABLE `spw_resource_config` (
	`id` INT(11) NOT NULL AUTO_INCREMENT,
	`config_type` VARCHAR(50) NULL DEFAULT NULL,
	`config_name` VARCHAR(50) NULL DEFAULT NULL,
	`auth_info` VARCHAR(1000) NULL DEFAULT NULL,
	`resource_url` VARCHAR(1000) NULL DEFAULT NULL,
	`active` ENUM('Y','N') NULL DEFAULT NULL,
	`created_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (`id`)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB
AUTO_INCREMENT=3
;

REPLACE INTO `spw_resource_config` (`id`, `config_type`, `config_name`, `auth_info`, `resource_url`, `active`, `created_date`) VALUES (5, '1', 'oltp/ffsc_full-db', '{ "user": "root", "password": "password"}', 'jdbc:mysql://bonsai-mariadb:3306/ffsc_full?useUnicode=true&characterEncoding=utf8&dumpQueriesOnException=true', 'Y', '2017-09-24 17:22:05');
REPLACE INTO `spw_resource_config` (`id`, `config_type`, `config_name`, `auth_info`, `resource_url`, `active`, `created_date`) VALUES (2, '1', 'audit/chimera-audit', '{ "user": "root", "password": "password"}', 'jdbc:mysql://localhost:3306/spw_audit?useUnicode=true&characterEncoding=utf8&dumpQueriesOnException=true', 'Y', '2017-09-24 18:42:29');
REPLACE INTO `spw_resource_config` (`id`, `config_type`, `config_name`, `auth_info`, `resource_url`, `active`, `created_date`) VALUES (3, '1', 'oltp/mifos-intg', '{ "user": "root", "password": "password"}', 'jdbc:mysql://localhost:3306/mifostenant-default?useUnicode=true&characterEncoding=utf8&dumpQueriesOnException=true', 'Y', '2017-09-24 17:22:05');

REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('publish.demandforecast.process', 'google-cal-auth-file', 'auth/Dhuruva-BMS-516dab070732.p12', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('publish.demandforecast.process', 'google-svs-user-email-id', '59413973790-compute@developer.gserviceaccount.com', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('publish.demandforecast.process', 'google-id', 'fa750e3a810282157696228d85ef83aca58d6340', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('publish.demandforecast.process', 'filepath', 'publish.demandforecast.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('test.callprocess.process', 'filepath', 'test.callprocess.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('test.doozle.process', 'filepath', 'test.doozle.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('test.rest.process', 'filepath', 'test.rest.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.collection.process', 'filepath', 'inbound.collection.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.collection.process', 'filepath', 'outbound.collection.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.collection.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.collection.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.collection.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.collection.process', 'lms-schema', 'mifostenant-default', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.denomination.process', 'filepath', 'inbound.denomination.process.spw', 'Y');

REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.denomination.process', 'filepath', 'outbound.denomination.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.denomination.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.denomination.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.denomination.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.denomination.process', 'lms-schema', 'mifostenant-default', 'Y');



REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.clientfps.process', 'filepath', 'inbound.clientfps.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.employeefps.process', 'filepath', 'inbound.employeefps.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.clientfps.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.employeefps.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.clientfps.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.clientfps.process', 'lms-schema', 'mifostenant-default', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.clientfps.process', 'filepath', 'outbound.clientfps.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.clientfps.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.clientfps.process', 'spwaudit-schema', 'spw_audit', 'Y');


REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.employeefps.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.employeefps.process', 'lms-schema', 'mifostenant-default', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.employeefps.process', 'filepath', 'outbound.employeefps.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.employeefps.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.jlgcollection.process', 'filepath', 'inbound.jlgcollection.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.jlgcollection.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('inbound.employeefps.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.jlgcollection.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.jlgcollection.process', 'lms-schema', 'mifostenant-default', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.jlgcollection.process', 'filepath', 'outbound.jlgcollection.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.jlgcollection.process', 'integration-db', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('ffsc.writecsv.fromdb', 'filepath', 'ffsc.writecsv.fromdb.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('ffsc.writecsv.fromdb', 'ffsc_full-db', 'oltp/ffsc_full-db', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.receiptack.process', 'integration-schema', 'chimera_integration', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.receiptack.process', 'lms-schema', 'mifostenant-default', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.receiptack.process', 'filepath', 'outbound.receiptack.process.spw', 'Y');
REPLACE INTO `spw_process_config` (`process`, `variable`, `value`, `active`) VALUES ('outbound.receiptack.process', 'integration-db', 'oltp/chimera-intg', 'Y');

update spw_process_config set variable='ffsc_full-db' and value = 'oltp/ffsc_full-db' where process = 'ffsc.writecsv.fromdb';


REPLACE INTO `spw_instance_config` (`instance`, `process`, `variable`, `value`, `active`) VALUES ('publish.demandforecast.process#1', 'publish.demandforecast.process', 'lms', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_instance_config` (`instance`, `process`, `variable`, `value`, `active`) VALUES ('test.callprocess.process#1', 'test.callprocess.process', 'lms', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_instance_config` (`instance`, `process`, `variable`, `value`, `active`) VALUES ('test.rest.process#1', 'test.rest.process', 'lms', 'oltp/chimera-intg', 'Y');
REPLACE INTO `spw_instance_config` (`instance`, `process`, `variable`, `value`, `active`) VALUES ('test.doozle.process#1', 'test.doozle.process', 'lms', 'oltp/chimera-intg', 'Y');


REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('basepath', 'root', 'Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('runmode', 'single', 'Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('audit', 'audit/chimera-audit', 'Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('ffsc_full-db','oltp/ffsc_full-db','Y');
REPLACE INTO spw_common_config (variable,value,active) values('mifos-db','oltp/mifos-intg','Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('ffsc_full-schema','ffsc_full','Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('lms-schema','mifostenant-default','Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('json.storagepath', '/var/lib/mysql/chimera_integration', 'Y');
REPLACE INTO `spw_common_config` (`variable`, `value`, `active`) VALUES ('json.storagepath', 'F:/mariadb/data/chimera_integration', 'Y');


-------------------------------------------------------------
				USE SELECT IN WHERE CLAUSE
-------------------------------------------------------------

select id,DATE(created_date) from `mifostenant-default`.a where NOT EXISTS (select DATE(end) as date from spw_audit.instance_audit where `mifostenant-default`.a.created_date < spw_audit.instance_audit.end  );

-------------------------------------------------------------
						GROUP CONCAT
-------------------------------------------------------------

SELECT GROUP_CONCAT(Client_Id) as Client_Id
   FROM 7_jlg_outbound_collection
   GROUP BY Group_Id;


--------------------------------------------------------------


--------------------------------------------------------------
					SET MAX_CONNECTIONS
--------------------------------------------------------------

SHOW VARIABLES LIKE "MAX_CONNECTIONS";

SET GLOBAL MAX_CONNECTIONS=300;


--------------------------------------------------------------
				NEW DEMAND_FORECAST_OVERALL
--------------------------------------------------------------


DROP TABLE IF EXISTS demand_forecast_overall;
CREATE TABLE demand_forecast_overall AS
select 
o.name AS 'office_name',
o.id AS 'office_id',
c.display_name as 'client_name',
c.id as 'client_id',
m.display_name AS 'group_name',
m.id as 'group_id',
m.parent_id as 'centre_id',
MAX(r.duedate) AS 'due_date',
MAX(r.installment) AS 'due_no',
s.display_name AS 'loan_officer_name',
s.id as 'loan_officer_id',
l.disbursedon_date as 'actual_disbursed_date',
sum(((((r.principal_amount - ifnull(r.principal_completed_derived,0)) + (r.interest_amount - ifnull(ifnull(r.interest_completed_derived,r.interest_waived_derived),0))) + (ifnull(r.fee_charges_amount,0) - ifnull(ifnull(r.fee_charges_completed_derived,r.fee_charges_waived_derived),0))) + (ifnull(r.penalty_charges_amount,0) - ifnull(ifnull(r.penalty_charges_completed_derived,r.penalty_charges_waived_derived),0)))) AS collection_amount,
l.id as 'loan_id'
from m_office o 
join m_group m on m.office_id = o.id
join m_loan l on l.group_id = m.id 
join m_client c on c.id = l.client_id
join m_loan_repayment_schedule r on r.loan_id = l.id
join m_staff s on s.id = l.loan_officer_id
where l.loan_status_id = 300 and r.duedate<=curdate() and r.obligations_met_on_date is null
GROUP BY l.id,c.id,m.id,r.duedate;

ALTER TABLE  demand_forecast_overall add column calendar_id INT;

alter table demand_forecast_overall add index idx_centre_id(centre_id);

ALTER TABLE demand_forecast_overall ADD INDEX idx_client_id(client_id);

ALTER TABLE demand_forecast_overall ADD INDEX idx_loan_id(loan_id);

ALTER TABLE demand_forecast_overall ADD INDEX idx_group_id(group_id);

alter table demand_forecast_overall add column deleted varchar(50);

update demand_forecast_overall set deleted = "false";

 UPDATE demand_forecast_overall, m_calendar_instance SET demand_forecast_overall.calendar_id = m_calendar_instance.calendar_id 
 WHERE demand_forecast_overall.centre_id=m_calendar_instance.entity_id  AND m_calendar_instance.entity_type_enum=4;


--------------------------------------------------------------
				OLD DEMAND_FORECAST_OVERALL
--------------------------------------------------------------
drop table if exists demand_forecast_overall1;

create table demand_forecast_overall1 as
select 
o.name AS 'office_name',
o.id AS 'office_id',
c.display_name as 'client_name',
c.id as 'client_id',
m.display_name AS 'group_name',
m.id as 'group_id',
m.parent_id as 'centre_id',
r.duedate AS 'due_date',
r.installment AS 'due_no',
s.display_name AS 'loan_officer_name',
s.id as 'loan_officer_id',
l.disbursedon_date as 'actual_disbursed_date',
(r.interest_amount + r.principal_amount) AS 'collection_amount',
l.id as 'loan_id'
from m_office o 
join m_group m on m.office_id = o.id
join m_loan l on l.group_id = m.id 
join m_client c on c.id = l.client_id
join m_loan_repayment_schedule r on r.loan_id = l.id
join m_staff s on s.id = l.loan_officer_id
where l.loan_status_id = 300 and r.duedate<=curdate() and r.obligations_met_on_date is null ;


ALTER TABLE  demand_forecast_overall1 add column calendar_id INT;

alter table demand_forecast_overall1 add index idx_centre_id(centre_id);

ALTER TABLE demand_forecast_overall1 ADD INDEX idx_client_id(client_id);

ALTER TABLE demand_forecast_overall1 ADD INDEX idx_loan_id(loan_id);

ALTER TABLE demand_forecast_overall1 ADD INDEX idx_group_id(group_id);


 UPDATE demand_forecast_overall1, m_calendar_instance SET demand_forecast_overall1.calendar_id = m_calendar_instance.calendar_id 
 WHERE demand_forecast_overall1.centre_id=m_calendar_instance.entity_id  AND m_calendar_instance.entity_type_enum=4;



UPDATE demand_forecast_overall , m_calendar_instance  inner join demand_forecast_overall
 on demand_forecast_overall.group_id=m_calendar_instance.entity_type_id 
 SET demand_forecast_overall.calendar_id=m_calendar_instance.calendar_id WHERE m_calendar_instance.entity_type_enum=4;

Correct One 

 UPDATE demand_forecast_overall, m_calendar_instance SET demand_forecast_overall.calendar_id = m_calendar_instance.calendar_id 
 WHERE demand_forecast_overall.centre_id=m_calendar_instance.entity_id  AND m_calendar_instance.entity_type_enum=4;


SELECT a.office_name as 'Branch_Name', a.group_id as 'entitySpecId', a.group_name as 'ef_Group_Name', a.group_id as 'ef_Group_Id', 
a.client_name as 'ef_Client_Name', a.client_id as 'ef_Client_Id', a.loan_officer_name as 'Loan_Officer_Name', 
a.loan_officer_id as 'ef_Employee_Id', a.due_date as 'Due_Date', max(a.due_no) as 'ef_Installment', a.group_id as 'listNo',
a.actual_disbursed_date as 'ff_Disbursement_Date', sum(a.collection_amount) as 'ef_EMI_amount', a.loan_id as 'ef_Loan_Id', a.calendar_id as 'ff_Calendar_Id' 
from demand_forecast_overall a where a.due_date <= CURDATE() and dayname(a.due_date)=dayname(curdate())
group by a.group_id,a.loan_id,a.client_id;