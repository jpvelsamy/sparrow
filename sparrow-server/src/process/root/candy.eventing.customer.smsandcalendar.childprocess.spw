process "candy.eventing.customer.smsandcalendar.childprocess"
{
	try
	{
		transform as "update-sms-template-variable" on "${sor-db}" using
			{"
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_due_date}',due_date);
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_site_visit_date}',due_date);
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_customer_name}',juno_customer_name);
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_vendor_name}',juno_vendor_name);
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_vendor_number}',juno_vendor_number);
				UPDATE ${parent-id}_sms_data_customer SET text_=replace(text_,'${juno_vendor_number_alt}',juno_vendor_number_alt);
				UPDATE ${parent-id}_sms_data_customer SET juno_customer_number=${test-mobile-number} WHERE ${test-mobile-number} IS NOT NULL;
			"} on-condition if  "${runtextcustomer}"=="true"
			
			c2sms as "send-text-customer" with-user userid"${csms-userid}" secured-by "${csms-securitykey}" from-source "${sor-db}" using
			{"
				SELECT ${csms-countrycode} as country, ${csms-source} as source, juno_customer_number as mobile, text_ as body from ${parent-id}_sms_data_customer;
			"} on-condition if  "${runtextcustomer}"=="true"
	
			transform as "create-calendar-event" on "${sor-db}" using
			{
				"INSERT INTO calendar_details (event_interval, event_start, event_end, event_alert_time, event_title, description, event_location, batch_id, updated_date)
				SELECT 0, leadgen_date as event_start, date_add(leadgen_date, interval 1 day) as event_end, time(leadgen_date) as event_alert_time, 
				concat('First call for ', name,'-',mobile) as event_title, intent_metadata as description, targeted_city as event_location, ${parent-id}, NOW() 
				FROM leads_syfd where batch_id=${parent-id};"				
			}on-condition if  "${runcalendar}"=="true"
			
		 	gcalendar as "update-google-calendar"  
			through-account "${gaccountid}" 
			secured-by "${gprivatekey}" 
			with-key "${p12filepath}" 
			for-project "${gcloud-project-name}" 
			on-behalf-of "${impersonated-user}" 
			from-source "${sor-db}" using
			{"
				select '${calendarid}' as event_calendar_id, event_interval, event_start, event_end, event_alert_time, event_title, description, event_location from calendar_details where batch_id=${parent-id};   
			"} on-condition if  "${runcalendar}"=="true"
	}
	catch
	{
	}
	finally
	{
	}
}